{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Doctor } from '../../Model/doctorModel';\nlet DoctorComponent = class DoctorComponent {\n  constructor(_apiService) {\n    this._apiService = _apiService;\n    this.doctor = new Doctor();\n    this.isDoctorSelected = false;\n  }\n  ngOnInit() {\n    this.listDoctor();\n  }\n  addDoctor() {\n    this._apiService.postDoctor(this.doctor).subscribe(res => {\n      alert(\"Doctor added Successfully\");\n      this.listDoctor();\n    }, err => {\n      alert(\"failed to add new doctor\");\n    });\n  }\n  listDoctor() {\n    this._apiService.getDoctor().subscribe(res => {\n      this.doctorList = res;\n      //console.log(this.doctorList);\n    }, err => {});\n  }\n  selectedDoctor(id) {\n    this.isDoctorSelected = true; //to only tigger it when edit button is clicked so that editform is igonred at run time.\n    this.fetchDoctorId(id);\n    this._apiService.getDoctorById(id).subscribe(res => {\n      this.doctorRow = res;\n    }, err => {});\n  }\n  editDoctor() {\n    this._apiService.updateDoctor(this.doctorId, this.doctorRow).subscribe(res => {\n      this.listDoctor();\n      alert(\"Updated Successfully\");\n    }, err => {});\n  }\n  fetchDoctorId(id) {\n    this.doctorId = id;\n  }\n};\n__decorate([ViewChild('closebutton')], DoctorComponent.prototype, \"closebutton\", void 0);\nDoctorComponent = __decorate([Component({\n  selector: 'app-doctor',\n  templateUrl: './doctor.component.html',\n  styleUrls: ['./doctor.component.css']\n})], DoctorComponent);\nexport { DoctorComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAUC,SAAS,QAAQ,eAAe;AAC5D,SAASC,MAAM,QAAQ,yBAAyB;AASzC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAO1BC,YAAqBC,WAAsB;IAAtB,gBAAW,GAAXA,WAAW;IANxB,WAAM,GAAS,IAAIH,MAAM,EAAE;IAGlC,qBAAgB,GAAU,KAAK;EAIhC;EACAI,QAAQ;IAEN,IAAI,CAACC,UAAU,EAAE;EACnB;EACAC,SAAS;IAEN,IAAI,CAACH,WAAW,CAACI,UAAU,CAAC,IAAI,CAACC,MAAM,CAAC,CAACC,SAAS,CACjDC,GAAG,IAAE;MACHC,KAAK,CAAC,2BAA2B,CAAC;MAClC,IAAI,CAACN,UAAU,EAAE;IACnB,CAAC,EACDO,GAAG,IAAE;MACHD,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,CACD;EACJ;EACAN,UAAU;IACR,IAAI,CAACF,WAAW,CAACU,SAAS,EAAE,CAACJ,SAAS,CACpCC,GAAG,IAAG;MACL,IAAI,CAACI,UAAU,GAACJ,GAAG;MACnB;IACD,CAAC,EACDE,GAAG,IAAG,CAEN,CAAC,CACF;EACH;EAEAG,cAAc,CAACC,EAAS;IACtB,IAAI,CAACC,gBAAgB,GAAC,IAAI,CAAC;IAC3B,IAAI,CAACC,aAAa,CAACF,EAAE,CAAC;IACtB,IAAI,CAACb,WAAW,CAACgB,aAAa,CAACH,EAAE,CAAC,CAACP,SAAS,CAC1CC,GAAG,IAAE;MACH,IAAI,CAACU,SAAS,GAACV,GAAG;IACpB,CAAC,EACDE,GAAG,IAAE,CAEL,CAAC,CACF;EACH;EACAS,UAAU;IACR,IAAI,CAAClB,WAAW,CAACmB,YAAY,CAAC,IAAI,CAACC,QAAQ,EAAC,IAAI,CAACH,SAAS,CAAC,CAACX,SAAS,CACnEC,GAAG,IAAE;MACH,IAAI,CAACL,UAAU,EAAE;MACjBM,KAAK,CAAC,sBAAsB,CAAC;IAE/B,CAAC,EACDC,GAAG,IAAE,CAEL,CAAC,CACF;EACH;EACAM,aAAa,CAACF,EAAS;IAErB,IAAI,CAACO,QAAQ,GAACP,EAAE;EAClB;CACD;AA5D2BQ,YAAxBzB,SAAS,CAAC,aAAa,CAAC,oDAAgB;AAL/BE,eAAe,eAL3BH,SAAS,CAAC;EACT2B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACW1B,eAAe,CAiE3B;SAjEYA,eAAe","names":["Component","ViewChild","Doctor","DoctorComponent","constructor","_apiService","ngOnInit","listDoctor","addDoctor","postDoctor","doctor","subscribe","res","alert","err","getDoctor","doctorList","selectedDoctor","id","isDoctorSelected","fetchDoctorId","getDoctorById","doctorRow","editDoctor","updateDoctor","doctorId","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\HealthCareSystem\\HospitalClient\\HospitalClient\\src\\app\\Components\\doctor\\DoctorComponent.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Doctor } from '../../Model/doctorModel';\r\nimport { ApiService } from '../../Service/api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-doctor',\r\n  templateUrl: './doctor.component.html',\r\n  styleUrls: ['./doctor.component.css']\r\n})\r\nexport class DoctorComponent implements OnInit {\r\n   public doctor: Doctor=new Doctor();   \r\n   public doctorList: any;\r\n   public doctorRow: any;\r\n   isDoctorSelected:boolean =false;\r\n   @ViewChild('closebutton')closebutton:any;\r\n  doctorId: any;\r\n  constructor( private _apiService:ApiService) {\r\n  }\r\n  ngOnInit(): void \r\n  {\r\n    this.listDoctor();\r\n  }\r\n  addDoctor()\r\n  {  \r\n     this._apiService.postDoctor(this.doctor).subscribe(\r\n      res=>{\r\n        alert(\"Doctor added Successfully\");\r\n        this.listDoctor();\r\n      },\r\n      err=>{\r\n        alert(\"failed to add new doctor\");\r\n      }\r\n     );\r\n  }\r\n  listDoctor(){\r\n    this._apiService.getDoctor().subscribe(\r\n      res =>{\r\n       this.doctorList=res;\r\n       //console.log(this.doctorList);\r\n      },\r\n      err =>{\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  selectedDoctor(id:number){\r\n    this.isDoctorSelected=true;//to only tigger it when edit button is clicked so that editform is igonred at run time.\r\n    this.fetchDoctorId(id);\r\n    this._apiService.getDoctorById(id).subscribe(\r\n      res=>{\r\n        this.doctorRow=res;\r\n      },\r\n      err=>{\r\n\r\n      }\r\n    )\r\n  }\r\n  editDoctor(){\r\n    this._apiService.updateDoctor(this.doctorId,this.doctorRow).subscribe(\r\n      res=>{\r\n        this.listDoctor();\r\n        alert(\"Updated Successfully\");\r\n\r\n      },\r\n      err=>{\r\n   \r\n      }\r\n    )\r\n  }\r\n  fetchDoctorId(id:number)\r\n  {\r\n    this.doctorId=id;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}