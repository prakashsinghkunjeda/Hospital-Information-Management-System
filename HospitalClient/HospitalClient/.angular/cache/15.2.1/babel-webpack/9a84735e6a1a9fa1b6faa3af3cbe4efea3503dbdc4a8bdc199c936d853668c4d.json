{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Patient } from '../../Model/patientModel';\nimport { PatientProblem } from '../../Model/PatinetProblem';\nimport { Medication } from '../../Model/Medication';\nlet PatientComponent = class PatientComponent {\n  constructor(_service) {\n    this._service = _service;\n    this.patient = new Patient();\n    this.problem = new PatientProblem();\n    this.patientRow = new Patient();\n    this.medication = new Medication();\n    this.patientId = 0;\n  }\n  ngOnInit() {\n    this.listPatient();\n    this.listDoctor();\n  }\n  addPatient() {\n    this._service.postPatient(this.patient).subscribe(res => {\n      alert(\"Patinet added Successfully\");\n      this.listPatient();\n      this.closebutton.nativeElement.click(); // closing modal \n    }, err => {\n      alert(\"failed to add new patient\");\n      console.log(err);\n    });\n  }\n  listPatientRow(id) {\n    this._service.getPatientById(id).subscribe(res => {\n      this.patientRow = res;\n      this.doctorFname = res.Doctor.FirstName;\n      this.docId = res.Doctor.DoctorId;\n      this.doctorLname = res.Doctor.LastName;\n      console.log(this.patientRow);\n    }, err => {\n      console.log(err);\n    });\n  }\n  addPatientProblem() {\n    this.problem.ProblemGroup.controls['PatientId'].setValue(this.patientId);\n    let problemValue = this.problem.ProblemGroup.value;\n    this._service.postPatientProblem(problemValue).subscribe(res => {}, err => {\n      console.log(err);\n    });\n  }\n  listPatient() {\n    this._service.getPatient().subscribe(res => {\n      this.patientList = res;\n    }, err => {});\n  }\n  listProblem() {\n    this._service.getProblem().subscribe(res => {\n      this.problemList = res;\n    }, err => {});\n  }\n  listDoctor() {\n    this._service.getDoctor().subscribe(res => {\n      this.doctorList = res;\n    }, err => {\n      console.log(err);\n    });\n  }\n  onDoctorChange(event) {\n    this.doctorId = event.target.value;\n    this.patient.DoctorId = this.doctorId;\n  }\n  fetchId(id) {\n    this.patientId = id;\n  }\n};\n__decorate([ViewChild('closebutton')], PatientComponent.prototype, \"closebutton\", void 0);\nPatientComponent = __decorate([Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})], PatientComponent);\nexport { PatientComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","Patient","PatientProblem","Medication","PatientComponent","constructor","_service","ngOnInit","listPatient","listDoctor","addPatient","postPatient","patient","subscribe","res","alert","closebutton","nativeElement","click","err","console","log","listPatientRow","id","getPatientById","patientRow","doctorFname","Doctor","FirstName","docId","DoctorId","doctorLname","LastName","addPatientProblem","problem","ProblemGroup","controls","setValue","patientId","problemValue","value","postPatientProblem","getPatient","patientList","listProblem","getProblem","problemList","getDoctor","doctorList","onDoctorChange","event","doctorId","target","fetchId","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\HealthCareSystem\\HospitalClient\\HospitalClient\\src\\app\\Components\\patient\\patient.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Doctor } from '../../Model/doctorModel';\nimport { Patient} from '../../Model/patientModel';\nimport { ApiService } from '../../Service/api.service';\nimport { PatientProblem } from '../../Model/PatinetProblem';\nimport { Medication } from '../../Model/Medication';\n\n@Component({\n  selector: 'app-patient',\n  templateUrl:'./patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent implements OnInit{\n  patient :Patient=new Patient();\n  problem : PatientProblem = new PatientProblem();\n  doctorList:any;\n  doctorId: any;\n  patientList: any;\n  patientRow:Patient=new Patient();\n  doctorFname: any;\n  doctorLname: any;\n  docId: any;\n  medication: Medication = new Medication();\n  @ViewChild('closebutton')closebutton:any;\n  patientId: number=0;\nconstructor(private _service:ApiService) { \n}\nngOnInit(): void {\n    this.listPatient();\n    this.listDoctor();\n}\naddPatient(){\n  this._service.postPatient(this.patient).subscribe(\n    res=>{\n      alert(\"Patinet added Successfully\");\n      this.listPatient();\n      this.closebutton.nativeElement.click();// closing modal \n    },\n    err=>{\n      alert(\"failed to add new patient\");\n        console.log(err);\n    }\n  );\n}\n\nlistPatientRow(id:number) {\n  this._service.getPatientById(id).subscribe(\n    res => {\n      this.patientRow = res;\n      this.doctorFname=res.Doctor.FirstName;\n      this.docId=res.Doctor.DoctorId;\n      this.doctorLname=res.Doctor.LastName;\n      console.log(this.patientRow);\n    },\n    err=>{\n      console.log(err);\n    }\n  );\n}\naddPatientProblem(){\n  this.problem.ProblemGroup.controls['PatientId'].setValue(this.patientId);\nlet problemValue =this.problem.ProblemGroup.value\nthis._service.postPatientProblem(problemValue).subscribe(\n  res=>{\n\n  },\n  err=>{\n    console.log(err);\n  }\n)\n}\nlistPatient(){\n  this._service.getPatient().subscribe(\n    res=>{\n      this.patientList=res;\n    },\n    err=>{\n\n    }\n  )\n}\n\nlistProblem(){\n  this._service.getProblem().subscribe(\n    res=>{\n      this.problemList=res;\n    },\n    err=>{\n\n    }\n  )\n \n}\nlistDoctor(){\n  this._service.getDoctor().subscribe(\n    res =>{\n     this.doctorList=res;\n     \n    },\n    err =>{\n     console.log(err);\n    }\n  );\n}\nonDoctorChange(event:any){\n  this.doctorId=event.target.value;\n  this.patient.DoctorId=this.doctorId;\n}\n\n\nfetchId(id:number){\n  this.patientId=id;\n}\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}